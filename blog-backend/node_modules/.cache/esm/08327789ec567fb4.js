let Router,checkLoggedIn,postsCtrl;_ec5‍.x([["default",()=>_ec5‍.o]]);_ec5‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_ec5‍.w("../../lib/checkLoggedIn",[["default",["checkLoggedIn"],function(v){checkLoggedIn=v}]]);_ec5‍.w("./posts.ctrl",[["*",null,function(v){postsCtrl=v}]]);



const postsApi = new Router();

const printInfo = (ctx) => {
  ctx.body = {
    method: ctx.method,
    path: ctx.path,
    params: ctx.params,
  };
};

postsApi.get('/', postsCtrl.list);
//두번째 매개변수로 미들웨어를 넘겨줌으로써 미들웨어를 거치도록 한다.
postsApi.post('/', checkLoggedIn, postsCtrl.write);

// postsApi.get('/:id', postsCtrl.read);
// postsApi.delete('/:id', postsCtrl.remove);
// postsApi.patch('/:id', postsCtrl.update);

//미사용
// postsApi.put('/:id', postsCtrl.replace);

const postIdApi = new Router();
postIdApi.get('/', postsCtrl.read);
postIdApi.delete('/', checkLoggedIn, postsCtrl.remove);
postIdApi.patch('/', checkLoggedIn, postsCtrl.update);

//라우터 내부의 라우터 url 은 /post/:id 가 된다.
postsApi.use('/:id', postsCtrl.checkObjectId, postIdApi.routes());

_ec5‍.d(postsApi);
